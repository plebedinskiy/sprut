#Область ПолучениеПочты

	&НаКлиенте
	Процедура ПодключениеКПочте(Команда)
		
		ПодключениеКПочтеНаСервере();
	
		Сообщить("Чтение завершено!");
		
	КонецПроцедуры

	&НаСервере
	Процедура ПодключениеКПочтеНаСервере()
		
		ИнтернетПочта = Новый ИнтернетПочта;
		Для Каждого Строка Из Объект.НастройкиДоступа Цикл
			
			Если НЕ Строка.ПолучатьСПочты Тогда
				Продолжить;
			КонецЕсли;
			
			МассивЛогинНазвание = СтрРазделить(Строка.Логин,"@");
			Если МассивЛогинНазвание.Количество() > 0 Тогда
				ЛогинНазвание = НРег(МассивЛогинНазвание[0]);
			Иначе
				ЛогинНазвание = "unknown";	
			КонецЕсли;
			Профиль = ЗаполнитьПрофильНаСервере(Строка.Логин, Строка.Пароль);
			Попытка
			    ИнтернетПочта.Подключиться(Профиль, ПротоколИнтернетПочты.IMAP);
			Исключение
			    Сообщить(ОписаниеОшибки());
			    Продолжить;
			КонецПопытки;
			
			ПараметрыОтбораIMAP = Новый Структура;
			//ПараметрыОтбораIMAP.Вставить("Новые", Истина);
			//ПараметрыОтбораIMAP.Вставить("Прочитанные", Истина);
			Если ЗначениеЗаполнено(Период.ДатаНачала) И ЗначениеЗаполнено(Период.ДатаОкончания) Тогда
				ПараметрыОтбораIMAP.Вставить("ПослеДатыОтправления", 	Период.ДатаНачала);
				ПараметрыОтбораIMAP.Вставить("ДоДатыОтправления", 		Период.ДатаОкончания);
			КонецЕсли;
			Заголовки = ИнтернетПочта.ПолучитьЗаголовки(ПараметрыОтбораIMAP);
			
	        Если НЕ Заголовки.Количество() = 0 Тогда
	    
			    Сообщения = ИнтернетПочта.Выбрать(Ложь, Заголовки, Ложь); 
				
				Для каждого Сообщение Из Сообщения Цикл
					
					Если СтрНачинаетсяС(Сообщение.Тема, "Отчет о продажах по поставщику") Тогда
					
						ДатаОтчетаМассивом = СтрРазделить(Прав(Сообщение.Тема, 8), ".");
						ДатаОтчетаСтрокой = "20" + ДатаОтчетаМассивом[2] + ДатаОтчетаМассивом[1] + ДатаОтчетаМассивом[0];
		             	Для каждого Вложение Из Сообщение.Вложения Цикл
							
							Вложение.Данные.Записать("C:\_Sky\logs" +   "\" + ДатаОтчетаСтрокой + "\" + ЛогинНазвание + "\" + Вложение.Name);
							
		             	КонецЦикла;
					ИначеЕсли  СтрНачинаетсяС(Сообщение.Тема, "Fwd: Отчет о продажах по поставщику") Тогда
						 
						Для каждого ПисьмоВложение Из Сообщение.Вложения Цикл
							
							Для Каждого Вложение Из ПисьмоВложение.Данные.Вложения Цикл
								
								Если НЕ СтрНачинаетсяС(ПисьмоВложение.Name, "Отчет о продажах по поставщику") И НЕ СтрНачинаетсяС(Сообщение.Тема, "Заявка") Тогда
									Сообщить("Я пока не умею или не буду читать: " + ПисьмоВложение.Name);
									Продолжить;
								КонецЕсли;
									 
								СтрокаСТемойПисьма = СтрЗаменить(ПисьмоВложение.Name, ".eml", "");
								ДатаОтчетаМассивом = СтрРазделить(Прав(СтрокаСТемойПисьма, 8), ".");
								ДатаОтчетаСтрокой = "20" + ДатаОтчетаМассивом[2] + ДатаОтчетаМассивом[1] + ДатаОтчетаМассивом[0];
								Файл = Новый Файл("C:\_Sky\logs" +   "\" + ДатаОтчетаСтрокой + "\" + ЛогинНазвание + "\" + Вложение.Name);
								Если Файл.Существует() И Файл.Размер() > 2048 И СтрНачинаетсяС(Вложение.Name, "Фаворит") Тогда
									Продолжить;
								КонецЕсли;
								Вложение.Данные.Записать("C:\_Sky\logs" +   "\" + ДатаОтчетаСтрокой + "\" + ЛогинНазвание + "\" + Вложение.Name);
								Файл = Новый Файл("C:\_Sky\logs" +   "\" + ДатаОтчетаСтрокой + "\" + ЛогинНазвание + "\" + Вложение.Name);
								Если Файл.Существует() И Файл.Размер() < 1024 И СтрНачинаетсяС(Вложение.Name, "Фаворит") Тогда
									УдалитьФайлы("C:\_Sky\logs" +   "\" + ДатаОтчетаСтрокой + "\" + ЛогинНазвание + "\" + Вложение.Name);
								КонецЕсли;
							КонецЦикла;
	
						КонецЦикла;
					ИначеЕсли СтрНачинаетсяС(Сообщение.Тема, "Отчет о движении товаров") Тогда 	
		            	ДатаОтчетаМассивом = СтрРазделить(Прав(Сообщение.Тема, 10), ".");
						ДатаОтчетаСтрокой = Формат(Дата(ДатаОтчетаМассивом[2] + ДатаОтчетаМассивом[1] + ДатаОтчетаМассивом[0]) + 86400, "ДФ=yyyyMMdd;");
		             	Для каждого Вложение Из Сообщение.Вложения Цикл
							
							Вложение.Данные.Записать("C:\_Sky\logs" +   "\" + ДатаОтчетаСтрокой + "\" + ЛогинНазвание + "\" + Вложение.Name);
							
		             	КонецЦикла;
		            ИначеЕсли  СтрНачинаетсяС(Сообщение.Тема, "Fwd: Отчет о движении товаров") Тогда
						 
						Для каждого ПисьмоВложение Из Сообщение.Вложения Цикл
							
							Для Каждого Вложение Из ПисьмоВложение.Данные.Вложения Цикл
								
								Если НЕ СтрНачинаетсяС(ПисьмоВложение.Name, "Отчет о движении товаров") И НЕ СтрНачинаетсяС(Сообщение.Тема, "Заявка") Тогда
									Сообщить("Я пока не умею или не буду читать: " + ПисьмоВложение.Name);
									Продолжить;
								КонецЕсли;
									 
								СтрокаСТемойПисьма = СтрЗаменить(ПисьмоВложение.Name, ".eml", "");
								ДатаОтчетаМассивом = СтрРазделить(Прав(СтрокаСТемойПисьма, 10), ".");
								ДатаОтчетаСтрокой = Формат(Дата(ДатаОтчетаМассивом[2] + ДатаОтчетаМассивом[1] + ДатаОтчетаМассивом[0]) + 86400, "ДФ=yyyyMMdd;");
								Вложение.Данные.Записать("C:\_Sky\logs" +   "\" + ДатаОтчетаСтрокой + "\" + ЛогинНазвание + "\" + Вложение.Name);
							
							КонецЦикла;
	
						КонецЦикла;
					ИначеЕсли  СтрНачинаетсяС(Сообщение.Тема, "Fwd: Заявка") ИЛИ СтрНачинаетсяС(Сообщение.Тема, "Заявка") Тогда
							
					Иначе
						Сообщить("Я пока не умею или не буду читать: " + Сообщение.Тема);
									
					КонецЕсли; 
				КонецЦикла; 
				
			Иначе
			     Сообщить("На сервере сообщений нет.");
			            
			КонецЕсли;
			
			ИнтернетПочта.Отключиться();
			
		КонецЦикла;
		
	КонецПроцедуры

	&НаСервереБезКонтекста
	Функция ЗаполнитьПрофильНаСервере(Логин, Пароль)
	
		Профиль 					= Новый ИнтернетПочтовыйПрофиль;
		
		Профиль.АдресСервераSMTP 	= "smtp.mail.ru"; 
		Профиль.АдресСервераPOP3 	= "pop.mail.ru";
		Профиль.АдресСервераIMAP 	= "imap.mail.ru";
		Профиль.ПортPOP3 			= 995;
		Профиль.ПортIMAP			= 993;
		Профиль.ПортSMTP 			= 465; 
		Профиль.Пользователь 		= Логин; 
		Профиль.Пароль 				= Пароль;  
		Профиль.ПользовательSMTP 	= Логин; 
		Профиль.ПарольSMTP 			= Пароль;
		Профиль.ПользовательIMAP 	= Логин; 
		Профиль.ПарольIMAP 			= Пароль;	
		Профиль.ИспользоватьSSLPOP3 = Истина;
		Профиль.ИспользоватьSSLIMAP = Истина;
		Профиль.ИспользоватьSSLSMTP = Истина;  
			
		Возврат Профиль;
		
	КонецФункции





#КонецОбласти

#Область ЧтениеФайлов

	&НаКлиенте
	Процедура ЧтениеФайловИзАрхива(Команда)
		
		Объект.СтруктураКаталога.Очистить();
		Объект.РеестрОплат.Очистить();	
		Если Объект.ПутьКПапке = "" Тогда
			
			ПрочитатьФайлыИзКаталогаНаСервере();

		КонецЕсли;	
		
	КонецПроцедуры

	&НаСервере
	Процедура ПрочитатьФайлыИзКаталогаНаСервере()
	
		МаскаФайлов = "*.xls";
		ПутьКПапке = "C:\_Sky\logs";
		
		ТабДок.Очистить();
		
		РФвЗОбъект = РеквизитФормыВЗначение("Объект");
		Макет 	 = РФвЗОбъект.ПолучитьМакет("МакетСпискаДокументов");
		
		ОбластьШапкаРеестраДокументов = Макет.ПолучитьОбласть("ОбластьШапкаРеестраДокументов");
		ОбластьСтрокаРеестраДокументов   = Макет.ПолучитьОбласть("ОбластьСтрокаРеестраДокументов");
		ТабДок.Вывести(ОбластьШапкаРеестраДокументов);
		НомерФайла = 1;
		
		//*-Проверка результата
		Для Каждого Строка Из Объект.НастройкиДоступа Цикл
			МассивЛогинНазвание = СтрРазделить(Строка.Логин,"@");
			Если МассивЛогинНазвание.Количество() > 0 Тогда
				ЛогинНазвание = НРег(МассивЛогинНазвание[0]);
			Иначе
				ЛогинНазвание = "unknown";	
			КонецЕсли;		
			ДатаДляИтерации = НачалоДня(Период.ДатаНачала);
			Пока ДатаДляИтерации <= НачалоДня(Период.ДатаОкончания) Цикл
				
				МассивНайденныхФайлов = НайтиФайлы(
			        НРег(ПутьКПапке) + "\" + Формат(ДатаДляИтерации, "ДФ=yyyyMMdd") + "\" + ЛогинНазвание, МаскаФайлов, Истина);
			 	НомерФайлаЗаДату = 1;
			    Для Каждого Файл Из МассивНайденныхФайлов Цикл
			    	Если СтрНайти(Файл.Имя, "ОтчетОДвиженииТоваров") > 0 Тогда
						Продолжить;
					КонецЕсли;
			        ОбластьСтрокаРеестраДокументов.Параметры.Документ 		= Файл.Имя;
			        ОбластьСтрокаРеестраДокументов.Параметры.ПутьКФайлу 	= Файл.ПолноеИмя;
			        ОбластьСтрокаРеестраДокументов.Параметры.Номер 			= НомерФайла;
			        ОбластьСтрокаРеестраДокументов.Параметры.НомерЗаДату 	= НомерФайлаЗаДату;
					ТабДок.Вывести(ОбластьСтрокаРеестраДокументов);
					НомерФайла = НомерФайла + 1;
					НомерФайлаЗаДату = НомерФайлаЗаДату + 1;
					ПрочитатьФайлНаСервере(Файл.ПолноеИмя);
					
			    КонецЦикла;	
				ДатаДляИтерации  = ДатаДляИтерации + 86400;
				
			КонецЦикла;
				
		КонецЦикла;
	
	КонецПроцедуры

	&НаСервере
	Функция ПрочитатьФайлНаСервере(ПолноеИмя) 
		
		ТД = Новый ТабличныйДокумент;		
		
		Попытка
			ТД.Прочитать(ПолноеИмя, СпособЧтенияЗначенийТабличногоДокумента.Значение);
		Исключение
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = ОписаниеОшибки();
			Сообщение.Сообщить();
			
		КонецПопытки;
		
		Контрагент 		= СтрЗаменить(СтрЗаменить(ТД.ПолучитьОбласть("R3C2").ТекущаяОбласть.Текст, "Организация\Подразделение: ", ""), "Общество с ограниченной ответственностью ", "ООО ");
		Организация 	= СтрЗаменить(ТД.ПолучитьОбласть("R4C2").ТекущаяОбласть.Текст, "Контрагент: ", "");
		ДатаНачала  	= ТД.ПолучитьОбласть("R6C3").ТекущаяОбласть.Текст;
		ДатаОкончания  	= ТД.ПолучитьОбласть("R6C11").ТекущаяОбласть.Текст;
		
	   	
		КолСтр = ТД.ВысотаТаблицы;
		НомерСтроки = 8;
		
		ФлагТаблицыНоменклатуры = Истина;
		ФлагТаблицыОплат = Ложь;
		
		Для Сч = НомерСтроки по КолСтр Цикл
			
			Если ФлагТаблицыНоменклатуры И ТД.ПолучитьОбласть("R" + Формат(Сч, "ЧГ=0") + "C2").ТекущаяОбласть.Текст = "Итог" Тогда
				
				ФлагТаблицыНоменклатуры = Ложь;	
				
			КонецЕсли;
			
			Если НЕ ФлагТаблицыОплат И ТД.ПолучитьОбласть("R" + Формат(Сч, "ЧГ=0") + "C2").ТекущаяОбласть.Текст = "Документ" Тогда
				
				ФлагТаблицыНоменклатуры = Ложь;
				ФлагТаблицыОплат 		= Истина;	
				НомерСтроки = НомерСтроки + 1;
				Продолжить;
				
			КонецЕсли;
			
			Если ФлагТаблицыОплат И ТД.ПолучитьОбласть("R" + Формат(Сч, "ЧГ=0") + "C2").ТекущаяОбласть.Текст = "Итог" Тогда
				
				Прервать;	
				
			КонецЕсли;
			
			Если ФлагТаблицыНоменклатуры Тогда 
				
				СтрокаРеестра = Объект.СтруктураКаталога.Добавить();
				
				СтрокаРеестра.Организация           = Организация;
				СтрокаРеестра.Контрагент            = Контрагент;
				СтрокаРеестра.ДатаНачала            = ДатаНачала;
				СтрокаРеестра.ДатаОкончания         = ДатаОкончания;
				СтрокаРеестра.Номенклатура			= ТД.ПолучитьОбласть("R" + Формат(Сч, "ЧГ=0") + "C2").ТекущаяОбласть.Текст;
				
				//@skip-warning
				СтрокаРеестра.КолвоНачальныйОстаток = Формат(ТД.ПолучитьОбласть("R" + Формат(Сч, "ЧГ=0") + "C3").ТекущаяОбласть.Текст, "ЧГ=0");
				//@skip-warning
				СтрокаРеестра.СуммаНачальныйОстаток = Формат(ТД.ПолучитьОбласть("R" + Формат(Сч, "ЧГ=0") + "C4").ТекущаяОбласть.Текст, "ЧГ=0");
				
				//@skip-warning
				СтрокаРеестра.КолвоПоступления      = Формат(ТД.ПолучитьОбласть("R" + Формат(Сч, "ЧГ=0") + "C5").ТекущаяОбласть.Текст, "ЧГ=0");
				//@skip-warning
				СтрокаРеестра.СуммаПоступления      = Формат(ТД.ПолучитьОбласть("R" + Формат(Сч, "ЧГ=0") + "C6").ТекущаяОбласть.Текст, "ЧГ=0");	
				//@skip-warning
				СтрокаРеестра.КолвоВозврат          = Формат(ТД.ПолучитьОбласть("R" + Формат(Сч, "ЧГ=0") + "C7").ТекущаяОбласть.Текст, "ЧГ=0");
				//@skip-warning
				СтрокаРеестра.СуммаВозврат          = Формат(ТД.ПолучитьОбласть("R" + Формат(Сч, "ЧГ=0") + "C8").ТекущаяОбласть.Текст, "ЧГ=0");
				//@skip-warning
				СтрокаРеестра.КолвоРеализация       = Формат(ТД.ПолучитьОбласть("R" + Формат(Сч, "ЧГ=0") + "C9").ТекущаяОбласть.Текст, "ЧГ=0");
				//@skip-warning
				СтрокаРеестра.СуммаРеализация       = Формат(ТД.ПолучитьОбласть("R" + Формат(Сч, "ЧГ=0") + "C10").ТекущаяОбласть.Текст, "ЧГ=0");	
				//@skip-warning
				СтрокаРеестра.КолвоКонечныйОстаток  = Формат(ТД.ПолучитьОбласть("R" + Формат(Сч, "ЧГ=0") + "C11").ТекущаяОбласть.Текст, "ЧГ=0");
				//@skip-warning
				СтрокаРеестра.СуммаКонечныйОстаток = Формат(ТД.ПолучитьОбласть("R" + Формат(Сч, "ЧГ=0") + "C12").ТекущаяОбласть.Текст, "ЧГ=0");
				СтрокаРеестра.ИмяФайла              = ПолноеИмя;
				
			ИначеЕсли ФлагТаблицыОплат Тогда
				
				СтрокаРеестра = Объект.РеестрОплат.Добавить();
				
				СтрокаРеестра.Организация           = Организация;
				СтрокаРеестра.Контрагент            = Контрагент;
				СтрокаРеестра.ДатаНачала            = ДатаНачала;
				СтрокаРеестра.ДатаОкончания         = ДатаОкончания;
				СтрокаРеестра.Документ				= ТД.ПолучитьОбласть("R" + Формат(Сч, "ЧГ=0") + "C2").ТекущаяОбласть.Текст;
				//@skip-warning
				СтрокаРеестра.СуммаНачальныйОстаток = Формат(ТД.ПолучитьОбласть("R" + Формат(Сч, "ЧГ=0") + "C3").ТекущаяОбласть.Текст, "ЧГ=0");
				//@skip-warning
				СтрокаРеестра.СуммаПриход  			= Формат(ТД.ПолучитьОбласть("R" + Формат(Сч, "ЧГ=0") + "C5").ТекущаяОбласть.Текст, "ЧГ=0");
				//@skip-warning
				СтрокаРеестра.СуммаРасход 			= Формат(ТД.ПолучитьОбласть("R" + Формат(Сч, "ЧГ=0") + "C7").ТекущаяОбласть.Текст, "ЧГ=0");
				//@skip-warning
				СтрокаРеестра.СуммаКонечныйОстаток 	= Формат(ТД.ПолучитьОбласть("R" + Формат(Сч, "ЧГ=0") + "C9").ТекущаяОбласть.Текст, "ЧГ=0");
				СтрокаРеестра.ИмяФайла              = ПолноеИмя;
				
			КонецЕсли;
			
			НомерСтроки = НомерСтроки + 1;
			
		КонецЦикла;
		ТД.Очистить();
		Возврат ТД;
		
		
	КонецФункции

#КонецОбласти

#Область ФормированиеОтчета

	&НаКлиенте
	Процедура СформироватьОтчет(Команда)
		СформироватьОтчетНаСервере();
		//
	КонецПроцедуры

	&НаСервере
	Процедура СформироватьОтчетНаСервере()
		
		ТабДок.Очистить();
		
		РФвЗОбъект = РеквизитФормыВЗначение("Объект");
		Макет 	 = РФвЗОбъект.ПолучитьМакет("МакетСводногоОтчета");
		
		ОбластьШапкаДвиженияТоваров = Макет.ПолучитьОбласть("ОбластьШапкаДвиженияТоваров");
		ОбластьСтрокаНоменклатура   = Макет.ПолучитьОбласть("ОбластьСтрокаНоменклатура");
		ОбластьСтрокаКонтрагент     = Макет.ПолучитьОбласть("ОбластьСтрокаКонтрагент");
		ОбластьСтрокаРазделение     = Макет.ПолучитьОбласть("ОбластьСтрокаРазделение");
		ОбластьСтрокаОрганизация   	= Макет.ПолучитьОбласть("ОбластьСтрокаОрганизация");
		ОбластьСтрокаИтого         	= Макет.ПолучитьОбласть("ОбластьСтрокаИтого");
		
		ОбластьШапкаВзаиморасчетов             = Макет.ПолучитьОбласть("ОбластьШапкаВзаиморасчетов");
		ОбластьСтрокаДокумент                  = Макет.ПолучитьОбласть("ОбластьСтрокаДокумент");
		ОбластьСтрокаОрганизацияВзаиморасчетов = Макет.ПолучитьОбласть("ОбластьСтрокаОрганизацияВзаиморасчетов");
		ОбластьСтрокаКонтрагентВзаиморасчетов  = Макет.ПолучитьОбласть("ОбластьСтрокаКонтрагентВзаиморасчетов");
		ОбластьСтрокаРазделениеВзаиморасчетов  = Макет.ПолучитьОбласть("ОбластьСтрокаРазделениеВзаиморасчетов");
		ОбластьСтрокаИтогоВзаиморасчетов       = Макет.ПолучитьОбласть("ОбластьСтрокаИтогоВзаиморасчетов");
		
		Запрос = Новый Запрос(ВернутьТекстЗапросаНаСервере());
		Запрос.УстановитьПараметр("ТЗНоменклатуры", 		РФвЗОбъект.СтруктураКаталога);
		Запрос.УстановитьПараметр("ТЗВзаиморасчетов",		РФвЗОбъект.РеестрОплат);
		ПакетРезультатов = Запрос.ВыполнитьПакет();
		
		РезультатПоДвиженияТоваров = ПакетРезультатов.Получить(ПакетРезультатов.ВГраница() - 1);
		ВыборкаИтоговая = РезультатПоДвиженияТоваров.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		ТабДок.НачатьАвтоГруппировкуСтрок();
		ТабДок.Вывести(ОбластьШапкаДвиженияТоваров);
		
		Пока ВыборкаИтоговая.Следующий() Цикл
			ОбластьСтрокаИтого.Параметры.Заполнить(ВыборкаИтоговая);
			ТабДок.Вывести(ОбластьСтрокаИтого, ВыборкаИтоговая.Уровень());
			ВыборкаОрганизация = ВыборкаИтоговая.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаОрганизация.Следующий() Цикл
				ОбластьСтрокаОрганизация.Параметры.Заполнить(ВыборкаОрганизация);
				ТабДок.Вывести(ОбластьСтрокаОрганизация, ВыборкаОрганизация.Уровень());
				ВыборкаРазделение = ВыборкаОрганизация.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаРазделение.Следующий() Цикл
					ОбластьСтрокаРазделение.Параметры.Заполнить(ВыборкаРазделение);
					ТабДок.Вывести(ОбластьСтрокаРазделение, ВыборкаРазделение.Уровень());
					ВыборкаНоменклатура = ВыборкаРазделение.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					Пока ВыборкаНоменклатура.Следующий() Цикл
					    ОбластьСтрокаНоменклатура.Параметры.Заполнить(ВыборкаНоменклатура);
						ТабДок.Вывести(ОбластьСтрокаНоменклатура, ВыборкаНоменклатура.Уровень());
		                ВыборкаДетальныеЗаписи = ВыборкаНоменклатура.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);	
						Пока ВыборкаДетальныеЗаписи.Следующий() Цикл	
						
							ОбластьСтрокаКонтрагент.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
							ТабДок.Вывести(ОбластьСтрокаКонтрагент, ВыборкаДетальныеЗаписи.Уровень());
							
						КонецЦикла;
					КонецЦикла;	
				КонецЦикла;
			КонецЦикла;	
		КонецЦикла;
		
		ТабДок.Вывести(ОбластьСтрокаИтого, ВыборкаИтоговая.Уровень());
		ТабДок.ЗакончитьАвтоГруппировкуСтрок();
		
		ТабДок.НачатьАвтоГруппировкуСтрок();
	
		РезультатПоВзаиморасчетам = ПакетРезультатов.Получить(ПакетРезультатов.ВГраница());
		ТабДок.Вывести(ОбластьШапкаВзаиморасчетов);
		ВыборкаИтоговая = РезультатПоВзаиморасчетам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаИтоговая.Следующий() Цикл
			ОбластьСтрокаИтогоВзаиморасчетов.Параметры.Заполнить(ВыборкаИтоговая);
		    ТабДок.Вывести(ОбластьСтрокаИтогоВзаиморасчетов, ВыборкаИтоговая.Уровень());
			ВыборкаОрганизация = ВыборкаИтоговая.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);	
			Пока ВыборкаОрганизация.Следующий() Цикл	
			    ОбластьСтрокаОрганизацияВзаиморасчетов.Параметры.Заполнить(ВыборкаОрганизация);
				ТабДок.Вывести(ОбластьСтрокаОрганизацияВзаиморасчетов, ВыборкаОрганизация.Уровень());
				ВыборкаРазделение = ВыборкаОрганизация.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаРазделение.Следующий() Цикл
					ОбластьСтрокаРазделениеВзаиморасчетов.Параметры.Заполнить(ВыборкаРазделение);
					ТабДок.Вывести(ОбластьСтрокаРазделениеВзаиморасчетов, ВыборкаРазделение.Уровень());
					ВыборкаКонтрагент = ВыборкаРазделение.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);	
					Пока ВыборкаКонтрагент.Следующий() Цикл	
					    ОбластьСтрокаКонтрагентВзаиморасчетов.Параметры.Заполнить(ВыборкаКонтрагент);
						ТабДок.Вывести(ОбластьСтрокаКонтрагентВзаиморасчетов, ВыборкаКонтрагент.Уровень());
						ВыборкаДокумент = ВыборкаКонтрагент.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);	
						Пока ВыборкаДокумент.Следующий() Цикл	
							ОбластьСтрокаДокумент.Параметры.Заполнить(ВыборкаДокумент);
							ТабДок.Вывести(ОбластьСтрокаДокумент, ВыборкаДокумент.Уровень());
						КонецЦикла;
					КонецЦикла;	
				КонецЦикла;	
			КонецЦикла;		
		КонецЦикла;
		ТабДок.Вывести(ОбластьСтрокаИтогоВзаиморасчетов, ВыборкаИтоговая.Уровень());	
		ТабДок.ЗакончитьАвтоГруппировкуСтрок();
	
		//*-Передадим в отдельную процедуру ТЗРеестра оплат для заполнения всех справочникок, документов и регистров
		//
		//
		//*-
		sprt_РаботаССервером.ЗаполнитьКлючевыеДанныеИСопоставления(РФвЗОбъект.РеестрОплат);
	КонецПроцедуры


	&НаСервере
	Функция ВернутьТекстЗапросаНаСервере()
		
		Возврат "ВЫБРАТЬ
		|	ТЗНоменклатуры.Организация КАК Организация,
		|	ТЗНоменклатуры.Контрагент КАК Контрагент,
		|	ТЗНоменклатуры.ДатаНачала КАК ДатаНачала,
		|	ТЗНоменклатуры.ДатаОкончания КАК ДатаОкончания,
		|	ТЗНоменклатуры.Номенклатура КАК Номенклатура,
		|	ТЗНоменклатуры.КолвоНачальныйОстаток КАК КолвоНачальныйОстаток,
		|	ТЗНоменклатуры.СуммаНачальныйОстаток КАК СуммаНачальныйОстаток,
		|	ТЗНоменклатуры.КолвоПоступления КАК КолвоПоступления,
		|	ТЗНоменклатуры.СуммаПоступления КАК СуммаПоступления,
		|	ТЗНоменклатуры.КолвоВозврат КАК КолвоВозврат,
		|	ТЗНоменклатуры.СуммаВозврат КАК СуммаВозврат,
		|	ТЗНоменклатуры.КолвоРеализация КАК КолвоРеализация,
		|	ТЗНоменклатуры.СуммаРеализация КАК СуммаРеализация,
		|	ТЗНоменклатуры.КолвоКонечныйОстаток КАК КолвоКонечныйОстаток,
		|	ТЗНоменклатуры.СуммаКонечныйОстаток КАК СуммаКонечныйОстаток,
		|	ТЗНоменклатуры.ИмяФайла КАК ИмяФайла
		|ПОМЕСТИТЬ ВТТЗНоменклатуры
		|ИЗ
		|	&ТЗНоменклатуры КАК ТЗНоменклатуры
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТЗВзаиморасчетов.Организация КАК Организация,
		|	ТЗВзаиморасчетов.Контрагент КАК Контрагент,
		|	ТЗВзаиморасчетов.ДатаНачала КАК ДатаНачала,
		|	ТЗВзаиморасчетов.ДатаОкончания КАК ДатаОкончания,
		|	ТЗВзаиморасчетов.Документ КАК Документ,
		|	ТЗВзаиморасчетов.СуммаНачальныйОстаток КАК СуммаНачальныйОстаток,
		|	ТЗВзаиморасчетов.СуммаКонечныйОстаток КАК СуммаКонечныйОстаток,
		|	ТЗВзаиморасчетов.СуммаРасход КАК СуммаРасход,
		|	ТЗВзаиморасчетов.СуммаПриход КАК СуммаПриход,
		|	ТЗВзаиморасчетов.ИмяФайла КАК ИмяФайла
		|ПОМЕСТИТЬ ВТТЗВзаиморасчетов
		|ИЗ
		|	&ТЗВзаиморасчетов КАК ТЗВзаиморасчетов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ Различные
		|	ВТТЗНоменклатуры.Организация КАК Организация,
		|	ВТТЗНоменклатуры.Контрагент КАК Контрагент,
		|	ВТТЗНоменклатуры.ДатаНачала КАК ДатаНачала,
		|	ВТТЗНоменклатуры.ДатаОкончания КАК ДатаОкончания,
		|	ВТТЗНоменклатуры.Номенклатура КАК Номенклатура,
		|	ВТТЗНоменклатуры.КолвоНачальныйОстаток КАК КолвоНачальныйОстаток,
		|	ВТТЗНоменклатуры.СуммаНачальныйОстаток КАК СуммаНачальныйОстаток,
		|	ВТТЗНоменклатуры.КолвоПоступления КАК КолвоПоступления,
		|	ВТТЗНоменклатуры.СуммаПоступления КАК СуммаПоступления,
		|	ВТТЗНоменклатуры.КолвоВозврат КАК КолвоВозврат,
		|	ВТТЗНоменклатуры.СуммаВозврат КАК СуммаВозврат,
		|	ВТТЗНоменклатуры.КолвоРеализация КАК КолвоРеализация,
		|	ВТТЗНоменклатуры.СуммаРеализация КАК СуммаРеализация,
		|	ВТТЗНоменклатуры.КолвоКонечныйОстаток КАК КолвоКонечныйОстаток,
		|	ВТТЗНоменклатуры.СуммаКонечныйОстаток КАК СуммаКонечныйОстаток,
		|	ВТТЗНоменклатуры.ИмяФайла КАК ИмяФайла,
		|	ВЫБОР
		|		КОГДА ВТТЗНоменклатуры.Контрагент ПОДОБНО ""%осторг%""
		|			Тогда ""Восторги""
		|		ИНАЧЕ ""ТоргСервис""
		|	КОНЕЦ КАК Разделение
		|ИЗ
		|	ВТТЗНоменклатуры КАК ВТТЗНоменклатуры
		|ИТОГИ
		|	МАКСИМУМ(ДатаНачала),
		|	МАКСИМУМ(ДатаОкончания),
		|	СУММА(КолвоНачальныйОстаток),
		|	СУММА(СуммаНачальныйОстаток),
		|	СУММА(КолвоПоступления),
		|	СУММА(СуммаПоступления),
		|	СУММА(КолвоВозврат),
		|	СУММА(СуммаВозврат),
		|	СУММА(КолвоРеализация),
		|	СУММА(СуммаРеализация),
		|	СУММА(КолвоКонечныйОстаток),
		|	СУММА(СуммаКонечныйОстаток),
		|	МАКСИМУМ(ИмяФайла)
		|ПО
		|	ОБЩИЕ,
		|	//Контрагент,
		|	Организация,
		|	Разделение,
		|	Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТТЗВзаиморасчетов.Организация КАК Организация,
		|	ВТТЗВзаиморасчетов.Контрагент КАК Контрагент,
		|	ВТТЗВзаиморасчетов.ДатаНачала КАК ДатаНачала,
		|	ВТТЗВзаиморасчетов.ДатаОкончания КАК ДатаОкончания,
		|	ВТТЗВзаиморасчетов.Документ КАК Документ,
		|	ВТТЗВзаиморасчетов.СуммаНачальныйОстаток КАК СуммаНачальныйОстаток,
		|	ВТТЗВзаиморасчетов.СуммаКонечныйОстаток КАК СуммаКонечныйОстаток,
		|	ВТТЗВзаиморасчетов.СуммаРасход КАК СуммаРасход,
		|	ВТТЗВзаиморасчетов.СуммаПриход КАК СуммаПриход,
		|	ВТТЗВзаиморасчетов.ИмяФайла КАК ИмяФайла,
		|	ВЫБОР
		|		КОГДА ВТТЗВзаиморасчетов.Контрагент ПОДОБНО ""%осторг%""
		|			ТОГДА ""Восторги""
		|		Когда ВТТЗВзаиморасчетов.Контрагент ПОДОБНО ""%левертрейд%""
		|			ТОГДА ""Клевертрейд""
		|		ИНАЧЕ ""ТоргСервис""
		|	КОНЕЦ КАК Разделение
		|ИЗ
		|	ВТТЗВзаиморасчетов КАК ВТТЗВзаиморасчетов
		|ИТОГИ
		|	МАКСИМУМ(ДатаНачала),
		|	МАКСИМУМ(ДатаОкончания),
		|	СУММА(СуммаНачальныйОстаток),
		|	СУММА(СуммаКонечныйОстаток),
		|	СУММА(СуммаРасход),
		|	СУММА(СуммаПриход),
		|	МАКСИМУМ(ИмяФайла)
		|ПО
		|	ОБЩИЕ,
		|	Организация,
		|	Разделение,
		|	Контрагент";
	КонецФункции


#КонецОбласти

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Элементы.СводныйОтчет.Заголовок = "Сводный отчет " + ?(Элементы.ТабДок.ТолькоПросмотр, " (с открытием файлов) "," (режим редактирования)"); 
	СтруктураОтбора = Новый Структура("Логин", "sprut.sale@mail.ru");
	Строки = Объект.НастройкиДоступа.НайтиСтроки(СтруктураОтбора);
	Если Строки.Количество() = 0 Тогда
	    Строка = Объект.НастройкиДоступа.Добавить();
	    Строка.Логин = "sprut.sale@mail.ru";
		Строка.Пароль  = "ixkVLD0MpRpHSnscV624";
    	Строка.ПолучатьСПочты = Истина;
	КонецЕсли;
	СтруктураОтбора.Логин = "favorit-groop@mail.ru";
  	Строки = Объект.НастройкиДоступа.НайтиСтроки(СтруктураОтбора);
  	Если Строки.Количество() = 0  Тогда
	    Строка = Объект.НастройкиДоступа.Добавить();
	    Строка.Логин = "favorit-groop@mail.ru";
		Строка.Пароль  = "QM8GnRa5zikTTmZ9qX3K";
    	Строка.ПолучатьСПочты = Ложь;
  	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПутьКПапкеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	СтандартнаяОбработка = ЛОЖЬ;
    
    Режим = РежимДиалогаВыбораФайла.ВыборКаталога; 
    ДиалогОткрытия = Новый ДиалогВыбораФайла(Режим); 
    ДиалогОткрытия.Каталог = Объект.ПутьКПапке;  
    ДиалогОткрытия.Заголовок = "Выберите каталог"; 
        
    Параметр = "";
    Оповещение = Новый ОписаниеОповещения("ВыборКаталога_Завершение", ЭтотОбъект, Параметр );
    ДиалогОткрытия.Показать(Оповещение);
 
КонецПроцедуры

&НаКлиенте
Процедура ВыборКаталога_Завершение(Результат, Параметр) Экспорт
	
	Если Результат = Неопределено Тогда
		
         Сообщить("Каталог не выбран");
         Возврат;
		 
    КонецЕсли;
    Объект.ПутьКПапке = Результат[0];
	
КонецПроцедуры

&НаКлиенте
Процедура НайтиФайлыВКаталогеЗавершение(МассивФайлов, ДополнительныеПараметры) Экспорт
	
	//Если МассивФайлов.Количество() = 0 Тогда
	//	Сообщить(ДополнительныеПараметры.ПутьКПапке + " Файлов не найдено!");
	//КонецЕсли;
	
    Для Каждого Файл Из МассивФайлов Цикл
        ТабДок = ПрочитатьФайлНаСервере(Файл.ПолноеИмя);
		
		ТабДок.Показать();
		//Сообщить("Найден файл - " + Файл.ПолноеИмя);

	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ТабДокОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка, ДополнительныеПараметры)
	
	СтандартнаяОбработка = Ложь;  
	Оповещение = Новый ОписаниеОповещения("ЗапускПриложения", ЭтотОбъект);
	НачатьЗапускПриложения(Оповещение, Расшифровка,, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапускПриложения(КодВозврата, ДополнительныйПараметр) Экспорт
	
	//@skip-warning
	а=1;
		
КонецПроцедуры

&НаКлиенте
Процедура РазрешитьЧтениеФайлов(Команда)
	
	Элементы.ТабДок.ТолькоПросмотр = ?(Элементы.ТабДок.ТолькоПросмотр, Ложь, Истина);
	Элементы.СводныйОтчет.Заголовок = "Сводный отчет " + ?(Элементы.ТабДок.ТолькоПросмотр, " (с открытием файлов) "," (режим редактирования)"); 
КонецПроцедуры



